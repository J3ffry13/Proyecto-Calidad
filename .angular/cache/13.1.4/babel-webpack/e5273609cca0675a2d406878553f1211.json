{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RutaService {\n  //get-all\n  constructor(http) {\n    this.http = http;\n    this.base = environment.api;\n    this.url = this.base + 'rutas/';\n    this.httpHeaders = new HttpHeaders({\n      'content-Type': 'application/json'\n    });\n  } // getAll = async () => {\n  //    const servicioGeneral = this.http.get<RutaModel[]>(this.url+'consultarT?patron=');\n  //   // return await this.http.get<RutaModel[]>(this.url+'consultarT?patron=');\n  //   return await servicioGeneral;\n  // };\n\n\n  getAll() {\n    return this.http.get(this.url + 'consultarT?patron=');\n  } //grabar\n\n\n  create(ingreso) {\n    return this.http.post(this.url, ingreso, {\n      headers: this.httpHeaders\n    });\n  } //get-one\n\n\n  getOne(id) {\n    return this.http.get(`${this.url}/${id}`);\n  } //update\n\n\n  update(ingreso) {\n    return this.http.put(`${this.url}/${ingreso.codigo}`, ingreso, {\n      headers: this.httpHeaders\n    });\n  } //delete\n\n\n  delete(id) {\n    return this.http.delete(`${this.url}/${id}`, {\n      headers: this.httpHeaders\n    });\n  }\n\n}\n\nRutaService.ɵfac = function RutaService_Factory(t) {\n  return new (t || RutaService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nRutaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RutaService,\n  factory: RutaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/UNIVERSIDAD/8 CICLO/CALIDAD/SEMANA 16/Proyecto-Calidad/src/DataBase/Services/Maestros/Ruta.Service.ts"],"names":["environment","HttpHeaders","i0","i1","RutaService","constructor","http","base","api","url","httpHeaders","getAll","get","create","ingreso","post","headers","getOne","id","update","put","codigo","delete","ɵfac","RutaService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrB;AACAC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYP,WAAW,CAACQ,GAAxB;AACA,SAAKC,GAAL,GAAW,KAAKF,IAAL,GAAY,QAAvB;AACA,SAAKG,WAAL,GAAmB,IAAIT,WAAJ,CAAgB;AAAE,sBAAgB;AAAlB,KAAhB,CAAnB;AACH,GAPoB,CAQrB;AACA;AACA;AACA;AACA;;;AACAU,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKL,IAAL,CAAUM,GAAV,CAAc,KAAKH,GAAL,GAAW,oBAAzB,CAAP;AACH,GAfoB,CAgBrB;;;AACAI,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,WAAO,KAAKR,IAAL,CAAUS,IAAV,CAAe,KAAKN,GAApB,EAAyBK,OAAzB,EAAkC;AAAEE,MAAAA,OAAO,EAAE,KAAKN;AAAhB,KAAlC,CAAP;AACH,GAnBoB,CAoBrB;;;AACAO,EAAAA,MAAM,CAACC,EAAD,EAAK;AACP,WAAO,KAAKZ,IAAL,CAAUM,GAAV,CAAe,GAAE,KAAKH,GAAI,IAAGS,EAAG,EAAhC,CAAP;AACH,GAvBoB,CAwBrB;;;AACAC,EAAAA,MAAM,CAACL,OAAD,EAAU;AACZ,WAAO,KAAKR,IAAL,CAAUc,GAAV,CAAe,GAAE,KAAKX,GAAI,IAAGK,OAAO,CAACO,MAAO,EAA5C,EAA+CP,OAA/C,EAAwD;AAAEE,MAAAA,OAAO,EAAE,KAAKN;AAAhB,KAAxD,CAAP;AACH,GA3BoB,CA4BrB;;;AACAY,EAAAA,MAAM,CAACJ,EAAD,EAAK;AACP,WAAO,KAAKZ,IAAL,CAAUgB,MAAV,CAAkB,GAAE,KAAKb,GAAI,IAAGS,EAAG,EAAnC,EAAsC;AAAEF,MAAAA,OAAO,EAAE,KAAKN;AAAhB,KAAtC,CAAP;AACH;;AA/BoB;;AAiCzBN,WAAW,CAACmB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,WAAV,EAAuBF,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAvB,WAAW,CAACwB,KAAZ,GAAoB,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE1B,WAAT;AAAsB2B,EAAAA,OAAO,EAAE3B,WAAW,CAACmB,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class RutaService {\r\n    //get-all\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.base = environment.api;\r\n        this.url = this.base + 'rutas/';\r\n        this.httpHeaders = new HttpHeaders({ 'content-Type': 'application/json' });\r\n    }\r\n    // getAll = async () => {\r\n    //    const servicioGeneral = this.http.get<RutaModel[]>(this.url+'consultarT?patron=');\r\n    //   // return await this.http.get<RutaModel[]>(this.url+'consultarT?patron=');\r\n    //   return await servicioGeneral;\r\n    // };\r\n    getAll() {\r\n        return this.http.get(this.url + 'consultarT?patron=');\r\n    }\r\n    //grabar\r\n    create(ingreso) {\r\n        return this.http.post(this.url, ingreso, { headers: this.httpHeaders });\r\n    }\r\n    //get-one\r\n    getOne(id) {\r\n        return this.http.get(`${this.url}/${id}`);\r\n    }\r\n    //update\r\n    update(ingreso) {\r\n        return this.http.put(`${this.url}/${ingreso.codigo}`, ingreso, { headers: this.httpHeaders });\r\n    }\r\n    //delete\r\n    delete(id) {\r\n        return this.http.delete(`${this.url}/${id}`, { headers: this.httpHeaders });\r\n    }\r\n}\r\nRutaService.ɵfac = function RutaService_Factory(t) { return new (t || RutaService)(i0.ɵɵinject(i1.HttpClient)); };\r\nRutaService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RutaService, factory: RutaService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}